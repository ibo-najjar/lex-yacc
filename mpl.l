

%{
                /* definitions part */

#include "y.tab.h" // generated by yacc and defines tokens
#include <stdlib.h> 
#include <string.h>

void yyerror(char *message);

%}

%option yylineno
%option case-insensitive
digit [0-9]
whitespace [ \t\r\f\v]+
newline [\n]
sign [+-]

%%

"main>>"    {return startProgram;}
"<<"        {return endProgram;}
">="        {return greaterEqual;}
"<="        {return lessEqual;}
">"         {return greater;}
"<"         {return less;}
"char"      {return charType;}
"int"       {return intType;}
"float"     {return floatType;}
"is"        {return isEqual;}
"not equal" {return notEqual;}
"log"       {return logStatment;}
"and"       {return logicOp_and;}      
"or"        {return logicOp_or;}  
"not"       {return logicOp_not;}  
"loop"      {return loop;}
"end-loop"  {return end_loop;}
"if"        {return if_statement;}
"elif"      {return elif_statement;}
"default"   {return default_statement;}
"-"         |
"+"         |
"*"         |
"/"         |   
"%"         |
"["         |
"]"         |
"("         |
")"         |
"{"         |
"}"         |
";"         |
"="         |
"'"         |
"."         {return yytext[0];}

[a-z][_a-z]*                {return identifier;}
{sign}?{digit}+             {return integerVal;}
\'[a-z]\'                   {return charVal;} 
{sign}?{digit}*\.?{digit}+  {return floatVal;}
{newline}                   {printf("%d>>   \n");yylineno++; return yylineno;}
{whitespace}                ;
.                           {printf("error %d",yylineno);}

%%
int yywrap(void){return 1;}
